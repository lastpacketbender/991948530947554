-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


This message will only be displayed once.

Here is a message that has been encrypted with RSA (the Crypt::RSA Perl module available in CPAN) :

- -----BEGIN COMPRESSED RSA ENCRYPTED MESSAGE-----
Version: 1.99
Scheme: Crypt::RSA::ES::OAEP

eJwBzQAy/zEwADE4OABDeXBoZXJ0ZXh0A8IifXB0VyTfteUHraSkmZ65TuXxZ8PBis15fvTp1xJL
KHQlki1StjB/T9omKVQF1JnC0XQ5F8GT96Ac4pM4zCLQb8z3hO+Ibd1BZ94sbJW/j8nDGTqMtiv/
plfS6wSFxlt7Rnyrae8QFpj7eO/UlAq1nGSa4dyZmT+HtvSVVpy2aBlc2jzeydIeSYEfA8Qc3YFH
MqDByhcaVX2CSPJPRi4iE7TiYxjOkWZE46igZNkVwg8uhBeBv0Kx9I1YVmXf
=ChfOBnVaWP2PqyTZT0byXg==
- -----END COMPRESSED RSA ENCRYPTED MESSAGE-----


Here is the public key used to encrypt it. Note that it has a low bit modulus and is therefore breakable:

$VAR1 = bless( {
                 'e' => 65537,
                 'n' => '5871616005012744251113781121559847071824350263409014769234326809362840408459053493071501259089516974751495136587',
                 'Version' => '1.99',
                 'Identity' => ''
               }, 'Crypt::RSA::Key::Public' );


The encrypted message is a number.  Break the decryption key, then come back to this same URL and enter the 
decrypted message to continue.  Each person who has come this far has received a unique message encrypted 
with a unique key.  You are not to collaborate.  Sharing your message or key will result in not receiving 
the next step.

There is a second chance to get your own RSA message and key.  Follow the "Numbers dot TK" hint to find it.

There are many fake messages out there.  Only messages signed with public key ID 7A35090F are valid.  

Good luck.

3301 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.11 (GNU/Linux)

iQIcBAEBAgAGBQJPEi5bAAoJEBgfAeV6NQkPbZ8P/jYbziszMJn+Mio0UncLsWG6
qdr/NXqfG1WbVwdXyCsKKsq3wAHZFm8hVOHg9ScD095zUMxdIEyEfOgrKR1OM82q
TNa4ONXsMXNVd5UOREzPaKkLiO6MBpeEKNns3Dc4C6Ei+pc4tkn1Fm5A6hWLvCeh
BwEvZAIIkl1O8v/LNnvd93jFPl9iitqonIYzUtYyEbVHDJyVUjes64+NDJ2CgVX7
2jxCiDIGnjnIPDzpmO87/g9urwAu+G3+L3iDsBr9oZyMMo3xzr+nZgvg06oUCREL
KbwunMmKyruD0GF/Myf7yy0EB6Ort6NN+CFDNKNxMRgpAovB+uhA2r9mgPy5RM9F
Ot1vCMB0KcMssx4VFnAt0WIQ5SojvFeI4cyWXLmZvRODQVgGWvXlRRhMjWLChKTZ
cxjX8P31jN+T+dCLCT/lZhXshNS2SFgACjcwZZSiHzE5ItA+2rI5mYIbMwP7NTVq
hYf8z+l0jZdzLnf7ML7o6CBq11qs/qJFXgd3wGEqaRtoNxxK/MXrdZfFwCCTKm7u
5dIqQwqukj08wN2bZ9HQyehZcpTM/n9qG2kTnhbBARvlnPIBFdzg5DdIn00Enj0T
8GGxFnEuhPqPCePKMQeUxx/2PC+3AoMh293fp/unm4aH0FSAGsB076K6bct7ZTz4
7pgA8Z81MoOCHUa4xv7w
=6hJn
-----END PGP SIGNATURE-----